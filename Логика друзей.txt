Отношение дружбы описывается таблицей FriendShip.

id frist_user second_user status
1      2          3         0

Таблица FriendShip имеет поля: id,  first_user, second_user, status.
first_user - первый участник отношения (его id)
second_user - второй учатник отношения (его id)
status - статус отношения. Может принимать значения 0 - ожидание или 1 - дружба.



Добавление в друзья: +

    Пользователь с id1 хочет добавить в друзья пользователя с id2 в друзья:
    1. Если в таблице FriendShip есть запись:
        id1 id2 0
        то выдать сообщение о том, что заявка уже отправлена.
    2. Если в таблице FriendShip есть запись:
        id1 id2 1 или id2 id1 1
        то выдать сообщение о том, что вы уже друзья
    3. Если в таблице FriendShip есть запись:
        id2 id1 0
        то обновляем эту запись: id2 id1 0 -> id2 id1 1
       Иначе:
        Создаем запись:
            id1 id2 0

Просмотр входящих заявок: +

    Пользователь с id1 просматривает входящие заявки:
    1. Отбираем записи из таблицы FriendShip у которых:
        second_user=id1 и status = 0

Просмотр исходящих заявок: +

    Пользователь с id1 просматривает исходящие заявки:
    1. Отбираем записи из таблицы FrinedShip, у которых:
        first_user = id1 и status = 0

Просмотр друзей: +

    Пользователь с id1 просматривает своих друзей:
    1. Отбираем записи из таблицы FriendShip, у которых:
        (first_user = id1 или second_user = id1) и status = 1

Принятие заявки в друзья: +

    Пользователь с id1 просматривает список входящих заявок:
    Пусть имеем заявку:
        idk id1 0
    Принятие этой заявки приведет к обновлению этой записи в таблице FrinedShip.
        idk id1 0 -> idk id1 1

Отклонение заявки в друзья:

    Пользователь с id1 просматривает список входящих заявок:
    Пусть имеем заявку:
        idk id1 0
    Отклонение этой заявки приведет к удалению этой записи из таблицы FriendShip.

Получение статуса дружбы с другим пользователем: +

    Пользователь с id1 получает статус с пользователем с id2:
    1. Выдать все записи из таблицы FriendShip у которых:
        (first_user = id1 и second_user = id2)
                    или
        (first_user = id2 и second_user = id1)

    Исходя из уже существующей логики построения таблицы FriendShip, результатом такого отбора
    может быть либо 0 записей, либо 1 запись:

    2. Если записей не нашлось, то выдать статус - нет ничего
       Иначе:
            Если status = 1, то выдать статус - уже друзья
            Иначе:
                Если first_user = id1, то выдать статус - есть исходящая заявка
                Иначе:
                    Выдать статус - есть входящая заявка


Удаление из друзей: +

    Пользователь с id1 хочет удалить из друзей пользователя c id2:
    1. Выдать все записи из таблицы FriendShip у которых:
        (first_user = id1 и second_user = id2)
                    или
        (first_user = id2 и second_user = id1)

    Исходя из уже существующей логики построения таблицы FriendShip, результатом такого отбора
    может быть либо 0 записей, либо 1 запись:

    2. Если записей не нашлось , то выдать ошибку - невозможно удалить человека которого у вас нет в друзьях.
       Иначе:
        Если status = 1, то:
            Если first_user = id2, то:
                запись id2 id1 1 обновляется -> id2 id1 0
            Иначе:
                запись id1 id2 1 обновляется -> id2 id1 0
        Иначе:
            Выдать ошибку - невозможно удалить человека, которого у вас нет в друзьях